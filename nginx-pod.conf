# The upstream component nginx needs to connect to
upstream django {
  # server unix:///path/to/your/mysite/mysite.sock; # for a file socket
  server unix:/var/www/pod/socket/podv2.sock;
  #server esup-pod:8000; # for a web port socket (we'll use this first)
}

# Redirect http to https
#server {
#  listen              80;
#  server_name         videos.ulysseus.eu;
#  return 301 https://videos.ulysseus.eu$request_uri;
#}

# configuration of the server
server {
  # The port Nginx is listening at
  # Chose 80 if you have not activated ssl
  # Chose 443 otherwise
  #listen              443 ssl;
  listen              80;
  # the domain name it will serve for
  server_name         videos.ulysseus.eu;
  charset             utf-8;
  # The location of your SSL certificates
  # ssl_certificate     /etc/ssl/videos.ulysseus.eu.crt;
  # ssl_certificate_key /etc/ssl/videos.ulysseus.eu.key;

  # max upload size
  client_max_body_size 4G;   # adjust to taste
  # Allow to download large files
  uwsgi_max_temp_file_size 0;

  #location ^~ /video_edit {
  #    track_uploads uploadp 30s
  #}

  location ^~ /progressbarupload/upload_progress {
    # JSON document rather than JSONP callback, pls
    upload_progress_json_output;
    report_uploads uploadp;
  }

  # Django media
  location /media  {
    expires 1y;
    add_header Cache-Control "public";
    gzip on;
    gzip_types text/vtt;
    alias /var/www/pod/media;
  }

  location /static {
    expires 1y;
    add_header Cache-Control "public";
    gzip_static  on;
    gzip_types text/plain application/xml text/css text/javascript application/javascript image/svg+xml;
    alias /var/www/pod/static; 
  }

  # Finally, send all non-media requests to the Django server.
  location / {
    uwsgi_pass  django;
    include     /var/www/pod/uwsgi_params; # the uwsgi_params file you installed
    track_uploads uploadp 30s;
  }
}
